{"ast":null,"code":"import _objectSpread from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";\nimport _createClass from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n/** Represents an HTTP response. */\nexport var HttpResponse = /*#__PURE__*/_createClass(function HttpResponse(statusCode, statusText, content) {\n  _classCallCheck(this, HttpResponse);\n\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n  this.content = content;\n});\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\n\nexport var HttpClient = /*#__PURE__*/function () {\n  function HttpClient() {\n    _classCallCheck(this, HttpClient);\n  }\n\n  _createClass(HttpClient, [{\n    key: \"get\",\n    value: function get(url, options) {\n      return this.send(_objectSpread(_objectSpread({}, options), {}, {\n        method: \"GET\",\n        url: url\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, options) {\n      return this.send(_objectSpread(_objectSpread({}, options), {}, {\n        method: \"POST\",\n        url: url\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, options) {\n      return this.send(_objectSpread(_objectSpread({}, options), {}, {\n        method: \"DELETE\",\n        url: url\n      }));\n    }\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\n    // @ts-ignore\n\n  }, {\n    key: \"getCookieString\",\n    value: function getCookieString(url) {\n      return \"\";\n    }\n  }]);\n\n  return HttpClient;\n}(); //# sourceMappingURL=HttpClient.js.map","map":null,"metadata":{},"sourceType":"module"}