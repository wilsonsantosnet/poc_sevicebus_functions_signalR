{"ast":null,"code":"import _classCallCheck from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter } from '@angular/core';\nimport { HubConnectionBuilder } from '@aspnet/signalr';\nimport { NotificationsService } from 'angular2-notifications';\nimport { GlobalService } from '../../global.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular2-notifications\";\nexport var SignalRService = /*#__PURE__*/(function () {\n  var SignalRService = /*#__PURE__*/function () {\n    function SignalRService(notificationsService) {\n      _classCallCheck(this, SignalRService);\n\n      this.notificationsService = notificationsService;\n      this.notificationReceived = new EventEmitter();\n      this.connectionEstablished = new EventEmitter();\n      this._baseUrl = GlobalService.getEndPoints().DEFAULT + \"/notification\";\n      this.createConnection();\n      this.registerOnServerEvents();\n      this.startConnection();\n    }\n\n    _createClass(SignalRService, [{\n      key: \"createConnection\",\n      value: function createConnection() {\n        this._hubConnection = new HubConnectionBuilder().withUrl(this._baseUrl).build();\n      }\n    }, {\n      key: \"registerOnServerEvents\",\n      value: function registerOnServerEvents() {\n        var _this = this;\n\n        this._hubConnection.on('teste', function (user, message) {\n          _this.notificationsService.success('Sucesso', message, {\n            timeOut: 1000,\n            showProgressBar: true,\n            pauseOnHover: true,\n            clickToClose: false\n          });\n\n          _this.notificationReceived.emit(message);\n        });\n      }\n    }, {\n      key: \"startConnection\",\n      value: function startConnection() {\n        var _this2 = this;\n\n        this._hubConnection.start().then(function () {\n          console.log('Hub de conexão iniciado');\n\n          _this2.connectionEstablished.emit(true);\n        }).catch(function (err) {\n          console.log('Erro ao realizar conexão do signalR, tentando novamente');\n          setTimeout(_this2.startConnection, 5000);\n        });\n      }\n    }]);\n\n    return SignalRService;\n  }();\n\n  SignalRService.ɵfac = function SignalRService_Factory(t) {\n    return new (t || SignalRService)(i0.ɵɵinject(i1.NotificationsService));\n  };\n\n  SignalRService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignalRService,\n    factory: SignalRService.ɵfac\n  });\n  return SignalRService;\n})();","map":null,"metadata":{},"sourceType":"module"}