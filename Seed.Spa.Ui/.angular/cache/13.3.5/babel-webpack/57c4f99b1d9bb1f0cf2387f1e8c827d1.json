{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\projetos\\\\gerador-project-all-solution\\\\Seed.Spa.Ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { SubjectSubscription } from \"./Utils\";\n/** Stream implementation to stream items to the server. */\n\nexport var Subject = /*#__PURE__*/function () {\n  function Subject() {\n    _classCallCheck(this, Subject);\n\n    this.observers = [];\n  }\n\n  _createClass(Subject, [{\n    key: \"next\",\n    value: function next(item) {\n      var _iterator = _createForOfIteratorHelper(this.observers),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var observer = _step.value;\n          observer.next(item);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      var _iterator2 = _createForOfIteratorHelper(this.observers),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var observer = _step2.value;\n\n          if (observer.error) {\n            observer.error(err);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _iterator3 = _createForOfIteratorHelper(this.observers),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var observer = _step3.value;\n\n          if (observer.complete) {\n            observer.complete();\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      this.observers.push(observer);\n      return new SubjectSubscription(this, observer);\n    }\n  }]);\n\n  return Subject;\n}(); //# sourceMappingURL=Subject.js.map","map":null,"metadata":{},"sourceType":"module"}